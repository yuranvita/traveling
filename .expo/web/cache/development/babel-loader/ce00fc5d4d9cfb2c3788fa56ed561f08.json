{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yuran\\\\Documents\\\\PROJECTs\\\\Apptur\\\\src\\\\pages\\\\AttractionsCard.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport api from \"../services/api\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function AttractionCard() {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      total = _useState2[0],\n      setTotal = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      feed = _useState8[0],\n      setFeed = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      token = _useState10[0],\n      setToken = _useState10[1];\n\n  function loadPage() {\n    var pageNumber,\n        token,\n        response,\n        data,\n        totalItems,\n        _args = arguments;\n    return _regeneratorRuntime.async(function loadPage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pageNumber = _args.length > 0 && _args[0] !== undefined ? _args[0] : page;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"myToken\"));\n\n          case 3:\n            token = _context.sent;\n\n            if (!(total && pageNumber > total)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 6:\n            console.log(pageNumber);\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(api.get(\"/cards/\" + page, {\n              headers: {\n                \"authorization\": \"Bearer \" + token\n              }\n            }));\n\n          case 9:\n            response = _context.sent;\n            data = response.data;\n            totalItems = response.headers[\"x-total-count\"];\n            setTotal(Math.floor(totalItems / 5) + 1);\n            setFeed([].concat(_toConsumableArray(feed), _toConsumableArray(data)));\n            setPage(pageNumber + 1);\n            console.log(total);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadPage();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: feed,\n    keyExtractor: function keyExtractor(post) {\n      return String(post.id);\n    },\n    onEndReached: function onEndReached() {\n      return loadPage();\n    },\n    onEndReachedThreshold: 0.1,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.card_container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.body_card,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, item.name), React.createElement(ScrollView, {\n        horizontal: true,\n        pagingEnabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, item == null ? void 0 : item.images.map(function (images) {\n        return React.createElement(Image, {\n          key: images.id,\n          style: styles.image,\n          source: {\n            uri: images.url\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }\n        });\n      })), React.createElement(View, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.scheduleText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, item.about), React.createElement(Text, {\n        style: styles.scheduleText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, item.instruction))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  card_container: {\n    paddingBottom: 20,\n    borderRadius: 10,\n    overflow: 'hidden',\n    borderWidth: 2,\n    borderColor: '#B3DAE2',\n    backgroundColor: '#E6F7FB'\n  },\n  card_title: {\n    left: 20,\n    color: '#4D6F80',\n    fontSize: 20,\n    fontFamily: 'Nunito_700Bold'\n  },\n  body_card: {\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  scheduleText: {\n    fontFamily: 'Nunito_600SemiBold',\n    fontSize: 16,\n    lineHeight: 24,\n    marginTop: 20,\n    marginLeft: 10\n  },\n  title: {\n    paddingLeft: 20,\n    color: '#4D6F80',\n    fontSize: 30,\n    fontFamily: 'Nunito_600SemiBold'\n  },\n  image: {\n    width: Dimensions.get('window').width,\n    height: 500,\n    resizeMode: 'cover'\n  }\n});","map":{"version":3,"sources":["C:/Users/Yuran/Documents/PROJECTs/Apptur/src/pages/AttractionsCard.tsx"],"names":["React","useState","useEffect","api","AsyncStorage","AttractionCard","total","setTotal","page","setPage","loading","setLoading","feed","setFeed","token","setToken","loadPage","pageNumber","getItem","console","log","get","headers","response","data","totalItems","Math","floor","styles","container","post","String","id","item","card_container","body_card","title","name","images","map","image","uri","url","scheduleText","about","instruction","StyleSheet","create","flex","paddingBottom","borderRadius","overflow","borderWidth","borderColor","backgroundColor","card_title","left","color","fontSize","fontFamily","justifyContent","alignItems","lineHeight","marginTop","marginLeft","paddingLeft","width","Dimensions","height","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from 'react';\r\nimport { Dimensions, StyleSheet, Text, View , ScrollView , Image, FlatList} from 'react-native';\r\nimport {Feather} from '@expo/vector-icons';\r\nimport api from '../services/api';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\ninterface Attraction {\r\n    id : number ;\r\n    name : string ; \r\n    instruction : string;\r\n    about : string,\r\n    images : Array<{\r\n      id : string,\r\n      url : string;\r\n    }>;\r\n\r\n    \r\n    \r\n\r\n}\r\n\r\nexport default function AttractionCard(){\r\n\r\n  \r\n\r\n  const [total , setTotal] = useState(0);\r\n  const [page , setPage] = useState (1);\r\n  const [loading , setLoading] = useState(false);\r\n  const [feed, setFeed] = useState<Attraction[]>([]);\r\n\r\n  const [token, setToken] = useState(\"\");\r\n  \r\n  // const load = async () => {\r\n  //   let token = await AsyncStorage.getItem(\"myToken\");\r\n\r\n  //   if(token){\r\n  //     setToken(token);\r\n  //   }\r\n  // }\r\n\r\n \r\n  \r\n  \r\n\r\n  async function  loadPage(pageNumber  = page) {\r\n    const token = await AsyncStorage.getItem(\"myToken\");\r\n    if(total && pageNumber> total){\r\n      return\r\n    }\r\n\r\n    console.log(pageNumber);\r\n    \r\n    const response = await api.get(`/cards/${page}` , {\r\n      headers : {\r\n        \"authorization\" : \"Bearer \"+token\r\n      }\r\n    });\r\n    const data = response.data;\r\n    const totalItems = response.headers[\"x-total-count\"];\r\n\r\n    setTotal(Math.floor(totalItems/5)+1)\r\n    setFeed([...feed, ...data]);\r\n    setPage(pageNumber + 1);\r\n    console.log(total);\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    loadPage()\r\n  }, []);\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <FlatList\r\n        data={feed}\r\n        keyExtractor={(post=> String(post.id))}\r\n        onEndReached={()=> loadPage()}\r\n        onEndReachedThreshold={0.1}\r\n        renderItem={({item})=>(\r\n          <View style={styles.card_container}>\r\n            <View style={styles.body_card}>\r\n              <Text style={styles.title}>{item.name}</Text>\r\n              <ScrollView horizontal pagingEnabled>\r\n                {item?.images.map(images => {\r\n                  return (\r\n                    <Image \r\n                    key={images.id}\r\n                    style={styles.image} \r\n                    source={{ uri: images.url}}\r\n                    />\r\n                  );\r\n                })}\r\n              </ScrollView>\r\n              <View style={styles.title}>\r\n                <Text style={styles.scheduleText}>{item.about}</Text>\r\n                <Text style={styles.scheduleText}>{item.instruction}</Text>\r\n                \r\n              </View>\r\n            </View>\r\n          </View>\r\n        )}\r\n        />\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    card_container:{\r\n      paddingBottom : 20,\r\n      borderRadius: 10,\r\n      overflow: 'hidden',\r\n      borderWidth: 2,\r\n      borderColor: '#B3DAE2',\r\n      backgroundColor: '#E6F7FB',\r\n    },\r\n    card_title:{\r\n      left : 20,\r\n      color: '#4D6F80',\r\n      fontSize: 20,\r\n      fontFamily: 'Nunito_700Bold'\r\n    },\r\n    body_card:{\r\n      justifyContent : 'center',\r\n      alignItems : 'flex-start',\r\n    },\r\n    scheduleText: {\r\n      fontFamily: 'Nunito_600SemiBold',\r\n      fontSize: 16,\r\n      lineHeight: 24,\r\n      marginTop: 20,\r\n      marginLeft : 10\r\n      \r\n    },\r\n    title: {\r\n      paddingLeft : 20,\r\n      color: '#4D6F80',\r\n      fontSize: 30,\r\n      fontFamily: 'Nunito_600SemiBold',\r\n    },\r\n    image: {\r\n      width: Dimensions.get('window').width,\r\n      height: 500,\r\n      resizeMode : 'cover'\r\n    },\r\n\r\n\r\n  });"]},"metadata":{},"sourceType":"module"}