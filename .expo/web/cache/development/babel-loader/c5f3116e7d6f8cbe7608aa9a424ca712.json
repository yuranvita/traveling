{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yuran\\\\Documents\\\\PROJECTs\\\\Apptur\\\\src\\\\pages\\\\CreateAttractions\\\\SelectMapPosition.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { RectButton } from 'react-native-gesture-handler';\nimport MapView, { Marker } from 'react-native-maps';\nexport default function SelectMapPosition() {\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    latitude: 0,\n    longitude: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  function handleSelectMapPosition(event) {\n    setPosition(event.nativeEvent.coordinate);\n  }\n\n  function handleNextStep() {\n    navigation.navigate('AttractionData', {\n      position: position\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    initialRegion: {\n      latitude: 2.821561,\n      longitude: -60.674037,\n      latitudeDelta: 0.008,\n      longitudeDelta: 0.008\n    },\n    style: styles.mapStyle,\n    onPress: handleSelectMapPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, position.latitude !== 0 && React.createElement(Marker, {\n    icon: mapMarkerImg,\n    coordinate: {\n      latitude: position.latitude,\n      longitude: position.longitude\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), position.latitude !== 0 && React.createElement(RectButton, {\n    style: styles.nextButton,\n    onPress: handleNextStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.nextButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Pr\\xF3ximo\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative'\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  },\n  nextButton: {\n    backgroundColor: '#15c3d6',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 56,\n    position: 'absolute',\n    left: 24,\n    right: 24,\n    bottom: 40\n  },\n  nextButtonText: {\n    fontFamily: 'Nunito_800ExtraBold',\n    fontSize: 16,\n    color: '#FFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/Yuran/Documents/PROJECTs/Apptur/src/pages/CreateAttractions/SelectMapPosition.tsx"],"names":["React","useState","useNavigation","RectButton","MapView","Marker","SelectMapPosition","navigation","latitude","longitude","position","setPosition","handleSelectMapPosition","event","nativeEvent","coordinate","handleNextStep","navigate","styles","container","latitudeDelta","longitudeDelta","mapStyle","mapMarkerImg","nextButton","nextButtonText","StyleSheet","create","flex","width","Dimensions","get","height","backgroundColor","borderRadius","justifyContent","alignItems","left","right","bottom","fontFamily","fontSize","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,OAAP,IAA4BC,MAA5B,QAA0C,mBAA1C;AASA,eAAe,SAASC,iBAAT,GAA6B;AAE1C,MAAMC,UAAU,GAAGL,aAAa,EAAhC;;AAF0C,kBAITD,QAAQ,CAAC;AAACO,IAAAA,QAAQ,EAAG,CAAZ;AAAgBC,IAAAA,SAAS,EAAE;AAA3B,GAAD,CAJC;AAAA;AAAA,MAInCC,QAJmC;AAAA,MAIxBC,WAJwB;;AAO1C,WAASC,uBAAT,CAAiCC,KAAjC,EAAkD;AAChDF,IAAAA,WAAW,CAACE,KAAK,CAACC,WAAN,CAAkBC,UAAnB,CAAX;AACD;;AAED,WAASC,cAAT,GAA0B;AACxBT,IAAAA,UAAU,CAACU,QAAX,CAAoB,gBAApB,EAAuC;AAAEP,MAAAA,QAAQ,EAARA;AAAF,KAAvC;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,aAAa,EAAE;AACbX,MAAAA,QAAQ,EAAE,QADG;AAEbC,MAAAA,SAAS,EAAE,CAAC,SAFC;AAGbW,MAAAA,aAAa,EAAE,KAHF;AAIbC,MAAAA,cAAc,EAAE;AAJH,KADjB;AAOE,IAAA,KAAK,EAAEH,MAAM,CAACI,QAPhB;AAQE,IAAA,OAAO,EAAEV,uBARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUEF,QAAQ,CAACF,QAAT,KAAsB,CAAtB,IACE,oBAAC,MAAD;AACA,IAAA,IAAI,EAAEe,YADN;AAEA,IAAA,UAAU,EAAE;AAAEf,MAAAA,QAAQ,EAAEE,QAAQ,CAACF,QAArB;AAA+BC,MAAAA,SAAS,EAACC,QAAQ,CAACD;AAAlD,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADF,EAmBEC,QAAQ,CAACF,QAAT,KAAsB,CAAtB,IACA,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEU,MAAM,CAACM,UAA1B;AAAsC,IAAA,OAAO,EAAER,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACO,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CApBF,CADF;AA2BD;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETlB,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAM/BY,EAAAA,QAAQ,EAAE;AACRO,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KADxB;AAERG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAFzB,GANqB;AAW/BR,EAAAA,UAAU,EAAE;AACVS,IAAAA,eAAe,EAAE,SADP;AAEVC,IAAAA,YAAY,EAAE,EAFJ;AAGVC,IAAAA,cAAc,EAAE,QAHN;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVJ,IAAAA,MAAM,EAAE,EALE;AAOVtB,IAAAA,QAAQ,EAAE,UAPA;AAQV2B,IAAAA,IAAI,EAAE,EARI;AASVC,IAAAA,KAAK,EAAE,EATG;AAUVC,IAAAA,MAAM,EAAE;AAVE,GAXmB;AAwB/Bd,EAAAA,cAAc,EAAE;AACde,IAAAA,UAAU,EAAE,qBADE;AAEdC,IAAAA,QAAQ,EAAE,EAFI;AAGdC,IAAAA,KAAK,EAAE;AAHO;AAxBe,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Dimensions, Text } from 'react-native';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { RectButton } from 'react-native-gesture-handler';\r\nimport MapView, { MapEvent, Marker } from 'react-native-maps';\r\n\r\n//import mapMarkerImg from '../../images/map-marker.png';\r\n\r\n\r\ninterface Position{\r\n\r\n}\r\n\r\nexport default function SelectMapPosition() {\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const [position , setPosition] = useState({latitude : 0 , longitude :0 });\r\n\r\n\r\n  function handleSelectMapPosition(event : MapEvent){\r\n    setPosition(event.nativeEvent.coordinate);\r\n  }\r\n\r\n  function handleNextStep() {\r\n    navigation.navigate('AttractionData' , { position });\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView \r\n        initialRegion={{\r\n          latitude: 2.821561,\r\n          longitude: -60.674037,\r\n          latitudeDelta: 0.008,\r\n          longitudeDelta: 0.008,\r\n        }}\r\n        style={styles.mapStyle}\r\n        onPress={handleSelectMapPosition}\r\n      >\r\n       {position.latitude !== 0 && (\r\n          <Marker \r\n          icon={mapMarkerImg}\r\n          coordinate={{ latitude: position.latitude, longitude:position.longitude }}\r\n        />\r\n       )}\r\n      </MapView>\r\n\r\n     {position.latitude !== 0 && (\r\n      <RectButton style={styles.nextButton} onPress={handleNextStep}>\r\n        <Text style={styles.nextButtonText}>Pr√≥ximo</Text>\r\n      </RectButton>\r\n     )}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    position: 'relative'\r\n  },\r\n\r\n  mapStyle: {\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n  },\r\n\r\n  nextButton: {\r\n    backgroundColor: '#15c3d6',\r\n    borderRadius: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: 56,\r\n\r\n    position: 'absolute',\r\n    left: 24,\r\n    right: 24,\r\n    bottom: 40,\r\n  },\r\n\r\n  nextButtonText: {\r\n    fontFamily: 'Nunito_800ExtraBold',\r\n    fontSize: 16,\r\n    color: '#FFF',\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}